block input [gamepad: 0]
block output [vjoy: 1]

set Update=1000 TapDelay=200m KeepPushed=250m

# axes

conn output.x [if [and [not fight] [not rolltoyaw]] ls.x 0]
conn output.y ls.y
conn output.z [add [if rolltoyaw ls.x 0] [if [not fight] [multiply ta: 1.2] 0]]

conn output.rx [if [not headlooktoggle] rs.x 0]
conn output.ry [if [not headlooktoggle] rs.y 0]
conn output.u headlook.x
conn output.v headlook.y

# buttons

# ABXY: throttle
conn output.1 [or abtn ta.break] # backward
conn output.2 bbtn # set 50%
conn output.3 xbtn # forward
conn output.4 ybtn.1 # engine boost

conn output.5 abtn.double # set 0%
conn output.6 bbtn.double # set -50%
conn output.7 xbtn.double # set 100%
conn output.8 ybtn.2 # supercruise

conn output.9 shift0
conn output.10 shift1

# LS + ABXY: throttle special
conn output.11 [if plane1 input.a off] # thrust back
conn output.12 [if plane1 input.b off]
conn output.13 [if plane1 input.x off] # thrust fwd
conn output.14 [if plane1 input.y off]

# RS + ABXY: buttons: power distribution
conn output.15 [if plane2 input.a off]
conn output.16 [if plane2 input.b off]
conn output.17 [if plane2 input.x off]
conn output.18 [if plane2 input.y off]

conn output.19 [and fight input.ltrigger]
conn output.20 [and fight input.rtrigger]

# LS + RS: radar and weapons
conn output.21 [if plane3 input.a off] # decrease radar range
conn output.22 [if plane3 input.b off] # next firegroup
conn output.23 [if plane3 input.x off] # prev firegroup
conn output.24 [if plane3 input.y off] # increase radar range

# hats

block hatc [combo input.dpad: TapDelay=0.4]
conn output.hat1 hatc.n
conn output.hat2 hatc.s
conn output.hat3 hatc.w
conn output.hat4 hatc.e

#conn output.hat1 [if plane0 input.dpad centre]
#conn output.hat2 [if plane1 input.dpad centre]
#conn output.hat3 [if plane2 input.dpad centre]
#conn output.hat4 [if plane3 input.dpad centre]

# logic
#####################
port shift0 input.lbumper
port shift1 input.rbumper

block plane0 [and [not shift0] [not shift1]]
block plane1 [and shift0 [not shift1]]
block plane2 [and [not shift0] shift1]
block plane3 [and shift0 shift1]

block ta [pedals input.lt input.rt: AxisThreshold=0.15 BreakThreshold=0.05 Exp=1.5]

block abtn [doublebutton [if plane0 input.a off]]
block bbtn [doublebutton [if plane0 input.b off]]
block xbtn [doublebutton [if plane0 input.x off]]
block ybtn [multibutton  [if plane0 input.y off]: NumTaps=2 TapDelay=0.4]

block rolltoyaw [toggle input.lthumb]
block fight [toggle input.back]
block headlooktoggle [toggle input.rthumb]

# left stick
block ls0 { x y
	$[deadzone: 0.05]
	$[multiply: 1.25]
	$[curvature: 0.2]
}
conn ls0.x input.lx
conn ls0.y input.ly

block ls1 { x y
	$[dampen: 0.2]
	$[smooth: 0.3]
}
conn ls1.x ls0.x
conn ls1.y ls0.y

block ls [stick [absmin ls0.x ls1.x] [absmin ls0.y ls1.y]]

# right stick
block rs { x y
	[circulardeadzone: 0.05]
	$[multiply: 1.25]
	$[curvature: 0.2]
}
conn rs.x input.rx
conn rs.y input.ry

block headlook [headlook: MovePerSec=2.0 AutoCenterDist=0.2 AutoCenterAccel=0.001 JumpToCenterAccel=0.1]
conn headlook.x [if headlooktoggle rs.x 0]
conn headlook.y [if headlooktoggle rs.y 0]
conn headlook.enable headlooktoggle

