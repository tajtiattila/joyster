block input [gamepad: 0]
block output [vjoy: 1]

set Update=1000 TapDelay=200m KeepPushed=250m

# axes

# fight=off rolltoyaw=off 1
# fight=off rolltoyaw=on 1
# fight=on rolltoyaw=off 1
# fight=on rolltoyaw=on 0
conn output.x [if [not rolltoyaw] ls.x 0]
conn output.y ls.y
conn output.z [add [add [if rolltoyaw ls.x 0] [if rsxz rs.x 0]] [if [not fight] [multiply ta: 1.2] 0]]

block rsxz [and [not [or rolltoyaw headlooktoggle]] fight]

conn output.rx [if [not [or rolltoyaw headlooktoggle]] rs.x 0]
conn output.ry [if [and [not headlooktoggle] [not plane1]] rs.y 0]
conn output.rz [if [and [not headlooktoggle] plane1] rs.y 0]

# buttons

# ABXY: throttle
conn output.1 [or abtn [and [not fight] ta.break]] # backward
conn output.2 bbtn.1 # set 50%
conn output.3 xbtn # forward
conn output.4 ybtn.1 # engine boost

conn output.5 abtn.double # set 0%
conn output.6 bbtn.2 # ui focus
conn output.7 xbtn.double # set 100%
conn output.8 ybtn.2 # hyper-super combo

conn output.9 shift0
conn output.10 shift1

# let ABXY through when shifting
conn output.11 [and anyshift input.a]
conn output.12 [and anyshift input.b]
conn output.13 [and anyshift input.x]
conn output.14 [and anyshift input.y]

conn output.15 [and fight input.ltrigger]
conn output.16 [and fight input.rtrigger]

# ed-only headlook toggle
conn output.18 input.rthumb

# non-ed galaxy map zoom
conn output.19 input.ltrigger
conn output.20 input.rtrigger

# galaxy map zoom

#if edtrack
#conn output.u galzoom
#block galzoom [pedals input.rt input.lt: AxisThreshold=0.05 BreakThreshold=0.05 Exp=1.0]
#else
#fi

# hats

block hatplane0 [if plane0 input.dpad centre]
block hatplane1 [if plane1 input.dpad centre]
block hatplane2 [if plane2 input.dpad centre]
block hatplane3 [if plane3 input.dpad centre]
conn output.hat1 hatplane0
conn output.hat2 hatplane1
conn output.hat3 hatplane2
conn output.hat4 hatplane3

# logic
#####################
port shift0 input.lbumper
port shift1 input.rbumper

block anyshift [or shift0 shift1]
block plane0 [not anyshift]
block plane1 [and shift0 [not shift1]]
block plane2 [and [not shift0] shift1]
block plane3 [and shift0 shift1]

block ta [pedals input.lt input.rt: AxisThreshold=0.15 BreakThreshold=0.05 Exp=1.5]

block abtn [doublebutton [if plane0 input.a off]]
block bbtn [multibutton  [if plane0 input.b off]: NumTaps=2 TapDelay=0.4 KeepPushed=1.0]
block xbtn [doublebutton [if plane0 input.x off]]
block ybtn [multibutton  [if plane0 input.y off]: NumTaps=2 TapDelay=0.4]

# fight mode switch toggles hardpoints
block hatplane3elems [hatelem hatplane3]
port fightmodetoggle input.back
conn output.17 [or fightmodetoggle hatplane3elems.n]

block rolltoyawswitch [toggle input.lthumb]
block rolltoyaw [and rolltoyawswitch fight]
block fight [toggle fightmodetoggle]

# headlook

#if edtrack
#port headlooktoggle off
#else
block headlooktoggle [toggle [and [not anyshift] input.rthumb]]
block headlookreset [and [and shift0 [not shift1]] input.rthumb]
conn headlook.reset headlookreset
conn headlooktoggle.reset headlookreset
conn output.u headlook.x
conn output.v headlook.y
#fi

# left stick
block ls { x y
	$[deadzone: 0.1]
	$[smooth: 0.1]
	$[multiply: 1.25]
	$[curvature: 0.4]
}
conn ls.x input.lx
conn ls.y input.ly

# right stick
block rs { x y
	[circulardeadzone: 0.1]
	$[smooth: 0.1]
	$[multiply: 1.25]
	$[curvature: 0.4]
}
conn rs.x input.rx
conn rs.y input.ry

block headlook [headlook: MovePerSec=0.8 AutoCenterDist=0.2 AutoCenterAccel=0.001 JumpToCenterAccel=0.1]
conn headlook.x [if headlooktoggle rs.x 0]
conn headlook.y [if headlooktoggle rs.y 0]

